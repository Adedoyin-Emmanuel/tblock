/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ERC20Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Base__factory>;
    getContractFactory(
      name: "IApprovalReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IApprovalReceiver__factory>;
    getContractFactory(
      name: "IPaidForReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPaidForReceiver__factory>;
    getContractFactory(
      name: "ITransferReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITransferReceiver__factory>;
    getContractFactory(
      name: "ERC20Internal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Internal__factory>;
    getContractFactory(
      name: "SimpleERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleERC20__factory>;
    getContractFactory(
      name: "WithPermit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WithPermit__factory>;
    getContractFactory(
      name: "WithPermitAndFixedDomain",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WithPermitAndFixedDomain__factory>;
    getContractFactory(
      name: "Event",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Event__factory>;
    getContractFactory(
      name: "EventManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EventManager__factory>;
    getContractFactory(
      name: "GreetingsRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GreetingsRegistry__factory>;
    getContractFactory(
      name: "IERC2612",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2612__factory>;
    getContractFactory(
      name: "IERC2612Standalone",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2612Standalone__factory>;
    getContractFactory(
      name: "Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Errors__factory>;
    getContractFactory(
      name: "Types",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Types__factory>;
    getContractFactory(
      name: "ITicketMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITicketMarket__factory>;
    getContractFactory(
      name: "TicketMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TicketMarket__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "ERC721URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorage>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ERC20Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Base>;
    getContractAt(
      name: "IApprovalReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IApprovalReceiver>;
    getContractAt(
      name: "IPaidForReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPaidForReceiver>;
    getContractAt(
      name: "ITransferReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITransferReceiver>;
    getContractAt(
      name: "ERC20Internal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Internal>;
    getContractAt(
      name: "SimpleERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleERC20>;
    getContractAt(
      name: "WithPermit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WithPermit>;
    getContractAt(
      name: "WithPermitAndFixedDomain",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WithPermitAndFixedDomain>;
    getContractAt(
      name: "Event",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Event>;
    getContractAt(
      name: "EventManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EventManager>;
    getContractAt(
      name: "GreetingsRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GreetingsRegistry>;
    getContractAt(
      name: "IERC2612",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2612>;
    getContractAt(
      name: "IERC2612Standalone",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2612Standalone>;
    getContractAt(
      name: "Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Errors>;
    getContractAt(
      name: "Types",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Types>;
    getContractAt(
      name: "ITicketMarket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITicketMarket>;
    getContractAt(
      name: "TicketMarket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TicketMarket>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
