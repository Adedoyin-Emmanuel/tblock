/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SimpleERC20,
  SimpleERC20Interface,
} from "../../../src/ERC20/SimpleERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "approveAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable[]",
        name: "tos",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "distributeAlongWithETH",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "payForAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferAlongWithETH",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferFromAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461017957611111906001600160401b0390601f38849003908101601f19168201908382118383101761016357808391604096879485528339810103126101795780516001600160a01b0381169290839003610179576020809201519184519261006a8461017e565b60018452818401603160f81b8152600c8388516100868161017e565b828152016b053696d706c652045524332360a41b8152209451902093865194838601917f91ab3d17e3a50a9d89e63fd30b92be7f5336b03b287bb946787a83a9d62a276683528887015260608601523060808601526080855260a085019385851090851117610163576000947fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef948852519020608052610127818554610199565b84558484526001825285842061013e828254610199565b90558551908152a351610f5490816101bd823960805181818161026d01526106e70152f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b604081019081106001600160401b0382111761016357604052565b919082018092116101a657565b634e487b7160e01b600052601160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461098157508163095ea7b3146109575781630e02df541461077557816318160ddd1461075857816323b872dd14610726578163313ce5671461070a5781633644e515146106cf578382634000aea01461068e57826342966c68146106115750816363d994c71461058b57816370a08231146105535781637ecebe001461051b57816395d89b41146104d9578163a9059cbb146104a857838263c1d34b8914610465578263cae9ca51146103c257508163d505accf1461018e57508063dd62ed3e1461015a5763e7fcb065146100fa57600080fd5b8060031936011261015657818080806001600160a01b03610119610a0a565b166101276024358233610e3c565b8190341561014c575b3491f115610142576020905160018152f35b51903d90823e3d90fd5b6108fc9150610130565b5080fd5b5034610156578060031936011261015657602090610187610179610a0a565b610181610a25565b90610b57565b9051908152f35b8383346101565760e0366003190112610156576101a9610a0a565b6101b1610a25565b9060443592606435906084359160ff83168093036103be576001600160a01b0390848216906101e1821515610c63565b81895260209260038452848a2054958551858101917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c983528588830152838b1660608301528b60808301528860a08301528460c083015260c0825260e0820167ffffffffffffffff93838210858311176103aa57818a52835190209061010084019161190160f01b83527f000000000000000000000000000000000000000000000000000000000000000061010286015261012285015260428152610160840194818610908611176103aa57848a52519020835261018082015260a4356101a082015260c4356101c0909101528a805284908b9060809060015afa156103a057895116820361036957801590811561035e575b5015610330576001840180941161031d578798509060039161031a985252862055610ca6565b80f35b634e487b7160e01b885260118952602488fd5b825162461bcd60e51b8152808a018390526008602482015267544f4f5f4c41544560c01b6044820152606490fd5b90504211158a6102f4565b835162461bcd60e51b8152808b018490526011602482015270494e56414c49445f5349474e415455524560781b6044820152606490fd5b84513d8b823e3d90fd5b8f8f6041602492634e487b7160e01b835252fd5b8680fd5b92915034610461576020906103d636610abd565b9690936103e4838533610ca6565b61040287519889968795869462ba451f60e01b865233908601610c3c565b03926001600160a01b03165af19182156104575760209392610428575b50519015158152f35b610449919250833d8111610450575b6104418183610a6d565b810190610c03565b903861041f565b503d610437565b81513d85823e3d90fd5b5050fd5b929150346104615761040260209161047c36610b04565b61048e8385879c96989599949c610d29565b8851635260769b60e11b8152998a97889687958601610c3c565b5050346101565780600319360112610156576020906104d26104c8610a0a565b6024359033610e3c565b5160018152f35b5050346101565781600319360112610156578051610517916104fa82610a3b565b600682526553494d504c4560d01b602083015251918291826109c1565b0390f35b5050346101565760203660031901126101565760209181906001600160a01b03610543610a0a565b1681526003845220549051908152f35b5050346101565760203660031901126101565760209181906001600160a01b0361057b610a0a565b1681526001845220549051908152f35b9190503461060d5760208361059f36610b04565b9491929390976105b0848633610e3c565b6105f08851998a9788968794639b6be06560e01b8652339086015260018060a01b0380961660248601526044850152608060648501526084840191610c1b565b0393165af191821561045757602093926104285750519015158152f35b8280fd5b929150346104615760203660031901126104615735903383526001602052610648828285205461064382821015610dfc565b610d1c565b33845260016020528184205561065f828454610d1c565b8355519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a380f35b92915034610461576020906106a236610abd565b9690936106b0838533610e3c565b610402875198899687958694635260769b60e11b865233908601610c3c565b505034610156578160031936011261015657602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346101565781600319360112610156576020905160128152f35b505034610156576060366003190112610156576020906104d2610747610a0a565b61074f610a25565b60443591610d29565b505034610156578160031936011261015657602091549051908152f35b905082826003193601126109545781359167ffffffffffffffff9384841161060d573660238501121561060d5783820135948511610941578460051b948151946020916107c483890188610a6d565b865281860160248098830101913683116103be578801905b82821061091e575050508535906107f4865134610b90565b91610800875184610bb0565b34036108e857610811875182610b90565b9061081d885183610bb0565b036108af57909582159190865b81518110156108a65787808080886001600160a01b03610857898261084f8a8c610bd9565b511633610e3c565b6108618789610bd9565b5116828a61089d575bf1156108935760001981146108815760010161082a565b634e487b7160e01b8852601187528988fd5b85513d89823e3d90fd5b506108fc61086a565b88865160018152f35b835162461bcd60e51b81528086018390526014818a0152731253959053125117d513d5105317d05353d5539560621b6044820152606490fd5b835162461bcd60e51b81528086018390526011818a015270494e56414c49445f4d53475f56414c554560781b6044820152606490fd5b81356001600160a01b038116810361093d5781529083019083016107dc565b8780fd5b634e487b7160e01b835260418252602483fd5b80fd5b5050346101565780600319360112610156576020906104d2610977610a0a565b6024359033610ca6565b8490843461060d578260031936011261060d5761051792506109a282610a3b565b600c82526b053696d706c652045524332360a41b602083015251918291825b6020808252825181830181905290939260005b8281106109f657505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016109d4565b600435906001600160a01b0382168203610a2057565b600080fd5b602435906001600160a01b0382168203610a2057565b6040810190811067ffffffffffffffff821117610a5757604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610a5757604052565b9181601f84011215610a205782359167ffffffffffffffff8311610a205760208381860195010111610a2057565b6060600319820112610a20576004356001600160a01b0381168103610a205791602435916044359067ffffffffffffffff8211610a2057610b0091600401610a8f565b9091565b906080600319830112610a20576001600160a01b03916004358381168103610a2057926024359081168103610a205791604435916064359067ffffffffffffffff8211610a2057610b0091600401610a8f565b6001600160a01b03908116308114610b875760005260026020526040600020911660005260205260406000205490565b50505060001990565b8115610b9a570490565b634e487b7160e01b600052601260045260246000fd5b81810292918115918404141715610bc357565b634e487b7160e01b600052601160045260246000fd5b8051821015610bed5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90816020910312610a2057518015158103610a205790565b908060209392818452848401376000828201840152601f01601f1916010190565b610c60949260609260018060a01b0316825260208201528160408201520191610c1b565b90565b15610c6a57565b60405162461bcd60e51b8152602060048201526014602482015273494e56414c49445f5a45524f5f4144445245535360601b6044820152606490fd5b90916001600160a01b03918216917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259160209184151580610d11575b610ceb90610c63565b8460005260028352604060002095169485600052825280604060002055604051908152a3565b508581161515610ce2565b91908203918211610bc357565b6001600160a01b0381169291903384141580610df2575b610d51575b610d4f9350610e3c565b565b60009380855260026020526040852033865260205260408520546000198103610d7c575b5050610d45565b848110610dad57610d4f95610d9386604093610d1c565b928152600260205281812033825260205220553880610d75565b60405162461bcd60e51b815260206004820152601760248201527f4e4f545f415554484f495a45445f414c4c4f57414e43450000000000000000006044820152606490fd5b5030841415610d40565b15610e0357565b60405162461bcd60e51b81526020600482015260116024820152704e4f545f454e4f5547485f544f4b454e5360781b6044820152606490fd5b6001600160a01b03918216929190610e55841515610c63565b308414610ee257169060008281526001602052610e7d82604083205461064382821015610dfc565b8382526001602052604082205583815260408120805491838301809311610ece5750556040519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a3565b634e487b7160e01b81526011600452602490fd5b60405162461bcd60e51b8152602060048201526014602482015273494e56414c49445f544849535f4144445245535360601b6044820152606490fdfea2646970667358221220397bdf5c4fd3a8ae802e32cb97acde6bdb06e02faf30fb66f87777e9dd20a60e64736f6c63430008110033";

type SimpleERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleERC20__factory extends ContractFactory {
  constructor(...args: SimpleERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    to: PromiseOrValue<string>,
    amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleERC20> {
    return super.deploy(to, amount, overrides || {}) as Promise<SimpleERC20>;
  }
  override getDeployTransaction(
    to: PromiseOrValue<string>,
    amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(to, amount, overrides || {});
  }
  override attach(address: string): SimpleERC20 {
    return super.attach(address) as SimpleERC20;
  }
  override connect(signer: Signer): SimpleERC20__factory {
    return super.connect(signer) as SimpleERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleERC20Interface {
    return new utils.Interface(_abi) as SimpleERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleERC20 {
    return new Contract(address, _abi, signerOrProvider) as SimpleERC20;
  }
}
